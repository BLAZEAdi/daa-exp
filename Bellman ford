#include <stdio.h>
#include <limits.h>
#define MAX_EDGES 100
#define MAX_VERTICES 100
#define INF INT_MAX
int src[MAX_EDGES], dest[MAX_EDGES], weight[MAX_EDGES];
int distance[MAX_VERTICES];
int V, E;
void bellmanFord(int start) {
    for (int i = 0; i < V; i++) {
        distance[i] = INF;
    }
    distance[start] = 0;
    for (int i = 0; i < V - 1; i++) {
        for (int j = 0; j < E; j++) {
            if (distance[src[j]] != INF && distance[src[j]] + weight[j] < distance[dest[j]]) {
                distance[dest[j]] = distance[src[j]] + weight[j];
            }
        }
    }  
    for (int j = 0; j < E; j++) {
        if (distance[src[j]] != INF && distance[src[j]] + weight[j] < distance[dest[j]]) {
            printf("Negative weight cycle detected!\n");
            return;
        }
    }
    printf("Vertex Distance from Source\n");
    for (int i = 0; i < V; i++) {
        printf("%d \t %d\n", i, distance[i]);
    }
}
int main() {
    printf("Enter number of vertices: ");
    scanf("%d", &V);
    printf("Enter number of edges: ");
    scanf("%d", &E);
    for (int i = 0; i < E; i++) {
        printf("Enter edge %d (source destination weight): ", i + 1);
        scanf("%d %d %d", &src[i], &dest[i], &weight[i]);
    } 
    int start;
    printf("Enter starting vertex: ");
    scanf("%d", &start);  
    bellmanFord(start);
    return 0;
}
